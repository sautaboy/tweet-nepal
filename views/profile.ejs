<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%=user.username%>
    </title>
    <link rel="stylesheet" href="stylesheets/index.css">
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css" rel="stylesheet" />
</head>

<body>

    <%- include ('header');%>

        <main>
            <!-- search container fo r searchng people -->
            <div class="search-container">
                <div>
                    <input type="text" placeholder="seach username" class="input-username">
                </div>
                <div class="searched-username-container">

                </div>
            </div>



            <!-- all form -->
            <div id="form-container">

                <!-- post creation form -->
                <form action="/createPost" method="POST" class="register-form create-post-form"
                    enctype="multipart/form-data">
                    <i class="ri-close-circle-line close-form"></i>
                    <label for="title">Title Of The Post</label>
                    <input type="text" name="title" id="title" placeholder="caption or title"
                        oninput="validateInputs()">
                    <p class="title-error" style="display: none; color: crimson;">Title is too long </p>

                    <label for="content">Content</label>
                    <textarea name="content" id="content" cols="30" rows="10" placeholder="description or content "
                        oninput="validateInputs()"></textarea>
                    <p class="content-error" style="display: none; color: crimson;">Content is too long.</p>

                    <div>
                        <label for="picture"></label>
                        <input type="file" id="image" name="picture" accept="image/*" onchange="validateInputs()">
                        <img id="imagePreview" src="" alt="" class="preview" style="display: none;">
                        <span>Choose Photo</span>
                    </div>
                    <input type="submit" id="submitButton" disabled>
                </form>


                <!-- profile picture update form -->
                <form action="/updateProfilePicture" method="POST" class=" register-form  update-profile-picture "
                    enctype="multipart/form-data">
                    <i class="ri-close-circle-line close-form"></i>
                    <div>
                        <label for="userPhoto"></label>
                        <input type="file" id="image" name="userPhoto" accept="image/*" onchange="previewImage(event)">
                        <img src="" alt="" class="preview" hidden>
                        <span>Choose Photo</span>
                    </div>

                    <input type="submit" id="submitButton">
                </form>



                <!--  edit profile form -->
                <form action="/editProfile" method="POST" class=" register-form  edit-profile-form "
                    enctype="multipart/form-data">
                    <i class="ri-close-circle-line close-form"></i>
                    <label for="username">Username:</label>
                    <input type="text" name="username" placeholder="username" value="<%=user.username%>">

                    <!-- <label for="password">Password:</label>
                      <input type="password" name="password" placeholder="password"> -->

                    <label for="name">Name:</label>
                    <input type="text" name="name" placeholder="name" value="<%= user.name%>">

                    <div>
                        <label for="userPhoto"></label>
                        <input type="file" id="image" name="userPhoto" accept="image/*" onchange="previewImage(event)">
                        <img src="" alt="" class="preview" hidden>
                        <span>Choose Photo</span>
                    </div>


                    <input type="submit" id="submitButton">
                </form>



            </div>


            <div id="left-side">
                <a href="">
                    <span>Tweet Nepal</span>
                </a>

                <a href="/index">
                    <i class="ri-home-smile-fill"></i>
                    <span>Home</span>
                </a>

                <a class="search-container-button">
                    <i class="ri-user-search-line"></i>
                    Search User
                </a>



                <a class="create-post-button">
                    <i class="ri-add-circle-line"></i>
                    <span>Create Post</span>
                </a>



                <a id="update-profile-picture-button">
                    <i class="ri-image-circle-line"></i>
                    <span>Udapte Profile Picture</span>
                </a>

                <!-- Show the button if user is not logged in -->
                <a href="/<%=user.username%>">
                    <i class="ri-user-line"></i>
                    <span>Profile</span>
                </a>

                <a id="edit-profile-button">
                    <i class="ri-user-line"></i>
                    <span>Edit Profile</span>
                </a>

                <a class="view-notes">
                    <i class="ri-gallery-view"></i>
                    <span>View Galary</span>
                </a>




                <div class="bottom-logout">
                    <div class="pop-up">
                        <a href="/logout/destroySession">Add an existing account</a>
                        <a href="/logout/destroySession">

                            Log Out <span class="username">@<%=user.username%></span>
                        </a>
                    </div>
                    <img src="<%= user.userPhoto ? '/images/uploads/' + user.userPhoto : '/images/nouser.webp' %>"
                        alt="">

                    <div class="span">
                        <span>
                            <%=user.name%>
                        </span>
                        <span class="username">@<%=user.username%></span>
                    </div>
                    <i class="ri-more-line"></i>
                </div>

            </div>


            <div id="middle-side">

                <% user.posts.reverse().forEach(function(elem){ %>

                    <section>
                        <a href="/post/<%=elem._id%>" class="holds-the-id-of-post">

                        </a>

                        <div class="user-info">
                            <img src="<%= user.userPhoto ? '/images/uploads/' + user.userPhoto : '/images/nouser.webp' %>"
                                alt="">
                            <a href="/<%=user.username%>" class="username-and-date">
                                <p class="username">@<%=user.username%>
                                </p>
                                <p class="date">
                                    <%= elem.formatPostDate=formatPostDate(elem.createdAt)%>
                                </p>
                            </a>
                            <% if (user._id.toString()===user._id.toString()) { %>
                                <a href="#" class="post-delete-button" data-post-id="<%= elem._id %>">
                                    <i class="ri-delete-bin-fill"></i>
                                    <span>Delete</span>
                                </a>
                                <i class="ri-more-line more"></i>
                                <% } %>
                        </div>


                        <div class="post">
                            <h1 class="heading-of-post">
                                <%=elem.title%>
                            </h1>
                            <p class="caption content">
                                <%=elem.content%>
                            </p>

                            <% if (elem.picture) { %>
                                <img src="/images/uploads/<%= elem.picture %>" alt="" class="post-image">
                                <% } %>

                        </div>

                        

                        <div>

                        </div>
                    </section>



                    <% }) %>


            </div>

            <div id="right-side">
                <i class="ri-close-circle-line cancel"></i>

                <h4>
                    Photo Gallery
                </h4>
                <div class="photo-gallery">
                    <% user.gallery.reverse().forEach((eachPhoto)=> { %>
                        <img src="/images/uploads/<%= eachPhoto %>" alt="">
                        <% }) %>
                </div>


        </main>





        <!-- axios link -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.8/axios.min.js"
            integrity="sha512-PJa3oQSLWRB7wHZ7GQ/g+qyv6r4mbuhmiDb8BjSFZ8NZ2a42oTtAq5n0ucWAwcQDlikAtkub+tPVCw4np27WCg=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>

        <script src="/javascripts/script.js"></script>


        <script>
            document.addEventListener("DOMContentLoaded", function (event) {
                var scrollpos = localStorage.getItem('scrollpos');
                if (scrollpos) window.scrollTo(0, scrollpos);
            });

            window.onbeforeunload = function (e) {
                localStorage.setItem('scrollpos', window.scrollY);
            };
        </script>

        <!-- like -->
        <script>
            document.querySelectorAll('.like-button').forEach(button => {
                button.addEventListener('click', async function (event) {
                    event.preventDefault();
                    const postId = this.getAttribute('data-post-id');
                    const response = await fetch(`/like/post/${postId}`, { method: 'POST' });
                    const data = await response.json();
                    if (data.success) {
                        // Update like button UI based on like status
                        const icon = this.querySelector('i');
                        if (data.liked) {
                            icon.classList.add('ri-supabase-fill');
                            icon.classList.remove('ri-supabase-line');
                        } else {
                            icon.classList.remove('ri-supabase-fill');
                            icon.classList.add('ri-supabase-line');
                        }

                        // Update like count
                        const likeCountSpan = this.nextElementSibling;
                        likeCountSpan.textContent = data.likesCount;
                    } else {
                        console.error("Error:", data.error);
                    }
                });
            });
        </script>



        <script>
            // Function to validate form inputs and display image preview
            function validateInputs() {
                // Get input values
                var title = document.getElementById('title').value.trim();
                var content = document.getElementById('content').value.trim();
                var fileInput = document.getElementById('image').value; // Check if file is selected

                // Validate title length
                var titleError = document.querySelector('.title-error');
                if (title.length > 70) {
                    titleError.style.display = 'block';
                } else {
                    titleError.style.display = 'none';
                }

                // Validate content word count
                var contentError = document.querySelector('.content-error');
                if (content.length > 4000) {
                    contentError.style.display = 'block';
                } else {
                    contentError.style.display = 'none';
                }

                // Enable/disable submit button based on input validity
                var submitButton = document.getElementById('submitButton');
                if ((title.length <= 70 || content.length <= 4000) && (title.length > 0 || content.length > 0 || fileInput)) {
                    submitButton.disabled = false;
                } else {
                    submitButton.disabled = true;
                }

                // Display selected image preview
                var imagePreview = document.getElementById('imagePreview');
                if (fileInput) {
                    var file = document.getElementById('image').files[0];
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block';
                    }
                    reader.readAsDataURL(file);
                } else {
                    imagePreview.src = '';
                    imagePreview.style.display = 'none';
                }
            }
        </script>


        <!-- show and hide logout -->
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const popUpButton = document.querySelector("#left-side div.bottom-logout");
                const popUp = document.querySelector("#left-side div.pop-up");

                // Toggle the 'active' class for the popup when the button is clicked
                popUpButton.addEventListener("click", function (event) {
                    event.stopPropagation(); // Prevent the click event from bubbling up to the document
                    popUp.classList.toggle("active");
                });

                // Close the popup when clicking outside of it
                document.addEventListener('click', function (event) {
                    const clickedElement = event.target;
                    if (!popUp.contains(clickedElement) && !popUpButton.contains(clickedElement)) {
                        popUp.classList.remove("active");
                    }
                });
            });
        </script>





        <!-- show an dhide pop up -->
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const postShareButtons = document.querySelectorAll('.post-share-button');

                postShareButtons.forEach(function (button) {
                    button.addEventListener('click', function () {
                        // Toggle 'active' class for the share icon associated with the clicked post-share-button
                        const shareIcon = this.parentElement.querySelector('.share-icon');
                        const isActive = shareIcon.classList.contains('active');
                        const allShareIcons = document.querySelectorAll('.share-icon');

                        // Remove 'active' class from all share icons
                        allShareIcons.forEach(function (icon) {
                            icon.classList.remove('active');
                        });

                        // Toggle 'active' class for the clicked share icon
                        if (!isActive) {
                            shareIcon.classList.add('active');
                        }
                    });
                });

                // Close share icon popups when clicking outside
                document.addEventListener('click', function (event) {
                    const clickedElement = event.target;
                    if (!clickedElement.closest('.post-share-button')) {
                        const allShareIcons = document.querySelectorAll('.share-icon');
                        allShareIcons.forEach(function (icon) {
                            icon.classList.remove('active');
                        });
                    }
                });
            });
        </script>




        <!-- share your post on social media -->
        <script>
            const postShareButtons = document.querySelectorAll('.post-share-button');
            postShareButtons.forEach((button) => {
                const postId = button.parentElement.parentElement.querySelector("a.holds-the-id-of-post").getAttribute("href");

                // Facebook
                const fb = button.parentElement.parentElement.querySelector("a.facebook");
                fb.href = `https://www.facebook.com/sharer.php?u=${postId}`;

                // Twitter
                const twitter = button.parentElement.parentElement.querySelector("a.twitter");
                twitter.href = `https://twitter.com/share?url=${postId}&text=Check out this post!`;

                // Messenger
                const messenger = button.parentElement.parentElement.querySelector("a.messenger");
                messenger.href = `fb-messenger://share?link=${postId}`;
            });
        </script>




        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const moreButtons = document.querySelectorAll('.more');

                moreButtons.forEach(button => {
                    button.addEventListener('click', function (event) {
                        event.stopPropagation(); // Prevent the click event from propagating to the document body

                        // Find the corresponding delete button
                        const deleteButton = this.parentElement.querySelector('.post-delete-button');

                        // Toggle the 'active' class of the delete button
                        deleteButton.classList.toggle('active');
                    });
                });

                document.body.addEventListener('click', function (event) {
                    const target = event.target;

                    // Check if the click target is not the more button or the delete button
                    if (!target.classList.contains('more') && !target.closest('.post-delete-button')) {
                        // Close all delete buttons by removing the 'active' class
                        const activeDeleteButtons = document.querySelectorAll('.post-delete-button.active');
                        activeDeleteButtons.forEach(button => {
                            button.classList.remove('active');
                        });
                    }
                });
            });
        </script>





        <!-- JavaScript to handle the delete button click -->
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const deleteButtons = document.querySelectorAll('.post-delete-button');

                deleteButtons.forEach(button => {
                    button.addEventListener('click', function (event) {
                        event.preventDefault();

                        const postId = button.getAttribute('data-post-id');
                        const confirmation = confirm('Are you sure you want to delete this post?');

                        if (confirmation) {
                            // Send AJAX request to delete the post
                            fetch(`/post/${postId}`, {
                                method: 'DELETE'
                            })
                                .then(response => {
                                    if (response.ok) {
                                        // Remove the post element from the UI
                                        const postElement = button.closest('section');
                                        postElement.remove();

                                        // Check if there are multiple posts
                                        const remainingPosts = document.querySelectorAll('section');
                                        if (remainingPosts.length === 1) {
                                        }
                                    } else {
                                        throw new Error('Failed to delete post');
                                    }
                                })
                                .catch(error => {
                                    console.error('Error deleting post:', error);
                                    alert('Failed to delete post');
                                });
                        }
                    });
                });
            });
        </script>


</body>

</html>